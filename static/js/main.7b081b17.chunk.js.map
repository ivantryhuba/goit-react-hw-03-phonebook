{"version":3,"sources":["components/Container/Container.styles.js","components/Container/Container.js","components/Input/Input.styles.js","components/Input/Input.js","components/ContactForm/ContactForm.styles.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styles.js","components/ContactList/ContactList.js","components/Notification/Notification.styles.js","components/Notification/Notification.js","App.styles.js","App.js","index.js"],"names":["ContainerStyled","styled","div","Container","children","LabelStyled","label","InputStyled","input","Input","id","type","name","placeholder","value","onChange","title","required","allProps","htmlFor","defaultProps","FormStyled","form","SubmitButtonStyled","button","ContactForm","state","number","handleInputValues","evt","currentTarget","setState","submitForm","preventDefault","props","onSubmit","uuidv4","resetForm","this","pattern","React","Component","ContactListStyled","ul","ContactItemStyled","li","RemoveBtnStyled","ContactList","contacts","onRemoveContact","map","onClick","NotificationStyled","p","Notification","text","H1Styled","h1","H2Styled","h2","App","filter","getContacts","contact","toLocaleLowerCase","includes","toLowerCase","addContact","newContact","some","alert","removeContact","data","prevState","changeFilterValue","target","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b081b17.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const ContainerStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n\r\n\r\n  width: 500px;\r\n  padding: 10px;\r\n\r\n  border: 2px solid red;\r\n  border-radius: 20px;\r\n`;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ContainerStyled } from \"./Container.styles\";\n\nexport const Container = ({children}) => {\n  return (\n    <ContainerStyled>\n      {children}\n    </ContainerStyled>\n  );\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const LabelStyled = styled.label`\r\ndisplay: block;\r\n  margin-bottom: 10px;\r\nfont-size: 20px;\r\nfont-weight: 700;\r\ncolor: black;\r\n`;\r\n\r\nexport const InputStyled = styled.input`\r\nwidth: 250px;\r\nmargin-bottom: 15px;\r\npadding: 10px;\r\nborder: 2px solid green;\r\nborder-radius: 10px;\r\n`;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { LabelStyled, InputStyled } from './Input.styles';\r\n\r\nexport const Input = ({\r\n  id,\r\n  type,\r\n  label,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  title,\r\n  required,\r\n  ...allProps\r\n}) => {\r\n  return (\r\n    <>\r\n      <LabelStyled htmlFor={id}>{label}</LabelStyled>\r\n      <InputStyled\r\n        id={id}\r\n        type={type}\r\n        name={name}\r\n        {...allProps}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        title={title}\r\n        required={required}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  type: 'text',\r\n  placeholder: '',\r\n  title: '',\r\n  required: false,\r\n};\r\n\r\nInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  title: PropTypes.string,\r\n  required: PropTypes.bool,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FormStyled = styled.form`\r\nmargin-bottom: 20px;\r\n  padding: 10px;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: black;\r\n`;\r\n\r\nexport const SubmitButtonStyled = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 150px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 15px;\r\n\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n\r\n\r\n  background-color: yellow;\r\n  border: 2px solid green;\r\n  border-radius: 20px;\r\n`;\r\n","import React from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Input } from '../Input/Input';\nimport { FormStyled, SubmitButtonStyled } from './ContactForm.styles';\n\nexport class ContactForm extends React.Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputValues = evt => {\n    const { name, value } = evt.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = evt => {\n    evt.preventDefault();\n    this.props.onSubmit({\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    });\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <FormStyled onSubmit={this.submitForm}>\n        <Input\n          id={uuidv4()}\n          type={'text'}\n          label={'Name'}\n          name={'name'}\n          placeholder={'Jason Born'}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={this.state.name}\n          onChange={this.handleInputValues}\n          title={\n            \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          }\n          required={true}\n        />\n\n        <Input\n          id={uuidv4()}\n          type={'tel'}\n          label={'Number'}\n          name={'number'}\n          placeholder={'+44-787-123-45-67'}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          value={this.state.number}\n          onChange={this.handleInputValues}\n          title={\n            'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\n          }\n          required={true}\n        />\n\n        <SubmitButtonStyled type=\"submit\">Add contact</SubmitButtonStyled>\n      </FormStyled>\n    );\n  }\n}\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactListStyled = styled.ul`\r\nwidth: 100%;\r\n  margin-top: 10px;\r\n  padding: 15px;\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: black;\r\n`;\r\n\r\nexport const ContactItemStyled = styled.li`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\n  margin-bottom: 10px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: black;\r\n`;\r\n\r\nexport const RemoveBtnStyled = styled.button`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n\r\nwidth: 75px;\r\nmargin-left: auto;\r\npadding: 5px;\r\n\r\nfont-size: 15px;\r\nfont-weight: 500;\r\n\r\nbackground-color: turquoise;\r\nborder: 2px solid orangered;\r\nborder-radius: 5px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  ContactListStyled,\r\n  ContactItemStyled,\r\n  RemoveBtnStyled,\r\n} from \"./ContactList.styles\";\r\n\r\nexport const ContactList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <ContactListStyled>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItemStyled key={id}>\r\n          {name} : {number}\r\n          <RemoveBtnStyled type=\"button\" onClick={() => onRemoveContact(id)}>\r\n            Remove\r\n          </RemoveBtnStyled>\r\n        </ContactItemStyled>\r\n      ))}\r\n    </ContactListStyled>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const NotificationStyled = styled.p`\r\nmargin-top: 0;\r\nmargin-bottom: 0;\r\npadding: 10px;\r\nfont-size: 20px;\r\nfont-weight: 500;\r\ncolor: orange;\r\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NotificationStyled } from \"./Notification.styles\";\n\nexport const Notification = ({ text }) => {\n  return <NotificationStyled>{text}</NotificationStyled>;\n};\n\nNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\r\n\r\nexport const H1Styled = styled.h1`\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: black;\r\n`;\r\n\r\nexport const H2Styled = styled.h2`\r\n  display: block;\r\n  margin-bottom: 10px;\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  color: black;\r\n`;\r\n","import React from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Container } from './components/Container/Container';\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { ContactList } from './components/ContactList/ContactList';\nimport { Notification } from './components/Notification/Notification';\nimport { Input } from './components/Input/Input';\n\nimport { H1Styled, H2Styled } from './App.styles';\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  getContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  addContact = newContact => {\n    if (\n      this.state.contacts.some(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\n      )\n    ) {\n      alert(\n        'You have contact with this name, please remove old contact and create new',\n      );\n      return;\n    }\n\n    this.setState({\n      contacts: [newContact, ...this.state.contacts],\n    });\n  };\n\n  removeContact = data => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== data),\n    }));\n  };\n\n  changeFilterValue = evt => {\n    this.setState({\n      filter: evt.target.value,\n    });\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const contacts = this.getContacts();\n\n    return (\n      <Container>\n        <H1Styled>PhoneBook</H1Styled>\n        <H2Styled>Add contact</H2Styled>\n        <ContactForm onSubmit={this.addContact} />\n\n        <H2Styled>Contacts</H2Styled>\n        {this.state.contacts.length > 0 ? (\n          <>\n            {/* Filter */}\n            <Input\n              id={uuidv4()}\n              label={'Find contacts by name'}\n              placeholder={'Boris Britva'}\n              name={'search'}\n              value={this.state.filter}\n              onChange={this.changeFilterValue}\n            />\n\n            <ContactList\n              contacts={contacts}\n              onRemoveContact={this.removeContact}\n            />\n          </>\n        ) : (\n          <Notification text={'You don`t have any contacts'} />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}